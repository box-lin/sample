{"meta":{"title":"Boxiang's Blog","subtitle":"","description":"","author":"Boxiang Lin","url":"http://boxianglin.github.io","root":"/"},"pages":[{"title":"categories","date":"2021-03-08T01:23:54.052Z","updated":"2021-03-08T01:23:54.052Z","comments":true,"path":"categories/index.html","permalink":"http://boxianglin.github.io/categories/index.html","excerpt":"","text":""},{"title":"About me","date":"2021-03-08T06:42:55.638Z","updated":"2021-03-08T06:42:55.638Z","comments":true,"path":"about/index.html","permalink":"http://boxianglin.github.io/about/index.html","excerpt":"","text":"1234567Hello ... String role = new String [&quot;computer science student&quot;, &quot;future software engineer&quot;, &quot;Ping Pon master&quot;, &quot;Dream Fighter&quot; ] String hobbies = new String[&quot;Algorithm&quot;, &quot;Web-Development&quot;, &quot;AI&quot;, &quot;Sport&quot;, &quot;Travel&quot;] System.out.print(&quot;Welcome to my blog&quot;) ………….. A CS student at Washington State writing some stuffs for fun By: Boxiang Lin"},{"title":"projects","date":"2021-05-13T03:41:46.833Z","updated":"2021-05-13T03:41:46.833Z","comments":true,"path":"projects/index.html","permalink":"http://boxianglin.github.io/projects/index.html","excerpt":"","text":"Click to run!"},{"title":"tags","date":"2021-03-08T01:25:13.881Z","updated":"2021-03-08T01:25:13.881Z","comments":true,"path":"tags/index.html","permalink":"http://boxianglin.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Numerically Solve PDE","slug":"NumericallyPDE","date":"2021-05-23T00:23:13.928Z","updated":"2021-05-24T03:08:06.037Z","comments":true,"path":"2021/05/22/NumericallyPDE/","link":"","permalink":"http://boxianglin.github.io/2021/05/22/NumericallyPDE/","excerpt":"For phone user, the css might not be properly rendered for MathJax, please visitthe pdf file at here Sample Partial Differential Equation \\begin{align*} & \\text{Suppose given the PDE (Diffusion)} \\\\ & \\partial_tu=D\\partial_x^2u,\\ for\\ x\\ \\in[0,1],and\\ t>0\\\\ \\\\ & \\text{Exact Solution (can be found in multiple PDEs textbooks): }\\\\ & u(x,t) = \\sum_{k=1}^{n}=\\frac{4}{(k\\pi)^2}sin(\\frac{k\\pi}{2})sin(k\\pi x)e^{-0.5(k\\pi )^2t}\\\\ \\\\ & \\text{We are going to compute the numerical solution with }\\\\ & \\text{the given information below. }\\\\ \\\\ & \\text{for }x \\in[0,1] \\text{ and t > 0 :}\\\\ & the\\ initial\\ condition\\ u(x,0)=\\begin{cases} x, & \\text{if } 0\\leq x \\leq 1/2\\\\ 1-x, & \\text{if } 1/2 < x\\leq1 \\end{cases}\\\\ &\\text{the boundary condition } u(0,t)=u(1,t)=0 \\\\ \\\\ & \\text{The Explicit Difference Schema: }\\\\ & \\frac{u_j^{n+1}-u_j^n}{\\Delta t}= D\\frac{u_{j+1}^n-2u_j^n+u_{j-1}^n}{(\\Delta x)^2}, where\\ D=\\frac{1}{2}\\\\ \\\\ &\\text{Take }\\Delta x=0.1, \\Delta t=1/100 \\text{ to proceed the calculations;} \\end{align*}","text":"For phone user, the css might not be properly rendered for MathJax, please visitthe pdf file at here Sample Partial Differential Equation \\begin{align*} & \\text{Suppose given the PDE (Diffusion)} \\\\ & \\partial_tu=D\\partial_x^2u,\\ for\\ x\\ \\in[0,1],and\\ t>0\\\\ \\\\ & \\text{Exact Solution (can be found in multiple PDEs textbooks): }\\\\ & u(x,t) = \\sum_{k=1}^{n}=\\frac{4}{(k\\pi)^2}sin(\\frac{k\\pi}{2})sin(k\\pi x)e^{-0.5(k\\pi )^2t}\\\\ \\\\ & \\text{We are going to compute the numerical solution with }\\\\ & \\text{the given information below. }\\\\ \\\\ & \\text{for }x \\in[0,1] \\text{ and t > 0 :}\\\\ & the\\ initial\\ condition\\ u(x,0)=\\begin{cases} x, & \\text{if } 0\\leq x \\leq 1/2\\\\ 1-x, & \\text{if } 1/2 < x\\leq1 \\end{cases}\\\\ &\\text{the boundary condition } u(0,t)=u(1,t)=0 \\\\ \\\\ & \\text{The Explicit Difference Schema: }\\\\ & \\frac{u_j^{n+1}-u_j^n}{\\Delta t}= D\\frac{u_{j+1}^n-2u_j^n+u_{j-1}^n}{(\\Delta x)^2}, where\\ D=\\frac{1}{2}\\\\ \\\\ &\\text{Take }\\Delta x=0.1, \\Delta t=1/100 \\text{ to proceed the calculations;} \\end{align*} Solving Idea for a particular t \\begin{align*} & \\text{Use of the finite difference scheme for discretizing partial derivatives}\\\\ & \\text{reduces the problem to vector-matrix multiplication.}\\\\ \\\\ & \\text{Where the unknown vector }U^n=(U_1^n,U_2^n,...U_N^n)^T\\text{ refers to sample}\\\\ & \\text{of grid values of the solution function }u(x,t) \\text{ evaluated at } t = t_n.\\\\ \\\\ & \\text{Then what we focuse on for }u_j^n=u(x_j,t_n) \\text{ is in a vector of }U^n to\\ U^{n+1} \\\\ \\\\ & \\text{To calculated the }U^{n+1} , \\text{we must use the explicit difference scheme} \\end{align*}A Look of Explicit Difference Scheme Equation \\begin{align*} & \\text{As we said we interested the vector }U^{n+1} = \\text{a set of } u_j^{n+1} j\\in[1,11],\\\\ & \\text{for the case that }\\Delta x= 0.1, x\\in[0,1]\\\\ \\\\ & \\text{Hence we would like to rearrange the equation to:}\\\\ \\\\ & u_j^{n+1}= \\frac{1}{2}\\frac{\\Delta t}{(\\Delta x)^2}(u_{j+1}^n-2u_j^n+u_{j-1^n})+u_j^n\\\\ & = u(x_j,t_{n+1})= \\frac{1}{2}\\frac{\\Delta t}{(\\Delta x)^2}[u(x_{j+1},t_n)-2u(x_j,t_n)+u(x_{j-1},t_n)]+u(x_j,t_n)\\\\ \\\\ & \\text{for easier programming purpose, we shift the index of t left by one}\\\\ & = u(x_j,t_{n})= \\frac{1}{2}\\frac{\\Delta t}{(\\Delta x)^2}[u(x_{j+1},t_{n-1})-2u(x_j,t_{n-1})+u(x_{j-1},t_{n-1})]+u(x_j,t_{n-1}) \\end{align*}A Look of How Initial and Boundary Condition are Important \\begin{align*} & \\text{The expression of } u(x,t)\\text{ in 2D matrix: }\\\\ \\\\ & \\begin{matrix} & 1 & 2&3& \\cdots&n\\\\ 1& u(0,0) & u(0, 1\\Delta t) & u(0,2\\Delta t) & \\cdots & u(0,n\\Delta t) \\\\ 2& u(1 \\Delta x,0) & \\cdots & \\cdots& \\cdots& u(1\\Delta x,n\\Delta t) \\\\ 3& u(2 \\Delta x, 0) & \\cdots& \\cdots& \\cdots& u(2\\Delta x,n\\Delta t)\\\\ &.\\\\ &. \\\\ 11& u(1,0) &\\end{matrix}\\\\ \\\\ &\\text{The initial condition givien the cover the values for first columns}\\\\ &\\text{And the boundary condition cover the values for first and last rows}\\\\ \\\\ &\\text{Now, the expression of }u(x,t) \\text{ should be:} \\\\ \\\\ & \\begin{matrix} & 1 & 2&3& \\cdots&n\\\\ 1& 0 & 0 & 0 & \\cdots & 0 \\\\ 2& 0.1 & u(1\\Delta x,1\\Delta t) & \\cdots& \\cdots& u(1\\Delta x,n\\Delta t) \\\\ 3& 0.2 & u(2\\Delta x,1\\Delta t) & \\cdots& \\cdots& u(2\\Delta x,n\\Delta t)\\\\ &.\\\\ 5& 0.5 &\\cdots& \\cdots& \\cdots& \\\\ 6& 0.4 & \\cdots& \\cdots& \\cdots& \\\\ 7& 0.3 &\\cdots& \\cdots& \\cdots& \\\\ &. \\\\ 11& 0 & 0 & 0 & \\cdots & 0 &\\end{matrix}\\\\ \\\\ \\\\ & \\text{Now from this matrix, we see the pattern of how explicit difference help}\\\\ & \\text{us to calculate the } u(x_j,t_n);\\\\ \\\\ & \\text{For example: }u(x_2,t_2),\\text{we need }u(x_1,t_1)，u(x_2,t_1),u(x_3,t_1)'s \\text{ values}\\\\ &\\text{to explicit difference equation: }\\\\ & u(x_j,t_{n})= \\frac{1}{2}\\frac{\\Delta t}{(\\Delta x)^2}[u(x_{j+1},t_{n-1})-2u(x_j,t_{n-1})+u(x_{j-1},t_{n-1})]+u(x_j,t_{n-1})\\\\ \\\\ & \\text{Hence we know we must calculated the current columns's val then proceed to}\\\\ & \\text{proceed to the row, }U^n = \\text{each columns value, and } U^{n+1} =\\text{next columns value} \\end{align*}MATLAB Implementations123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687clearclose allprompt = &#x27;Enter the value of ∆t: &#x27;;% set t_max= x then coloumns needed = x / delta_t + 1% row = 1/ (0.01) + 1 = 11 (by default x[0,1]delta_t = input(prompt);prompt1 = &#x27;Enter the value of T(max): &#x27;;column = input(prompt1) / delta_t + 1 ;row = 11;% 2-D array with all zeros for exact solutionarr1 = zeros(row,column);% initial variables for exact solutionresult = 0;arr1_x = 0;arr1_t = 0;% exact solution% taking 14 termsfor i = 1:row for j = 1:column for k = 1:14 result = result + 4/(k*pi)^2*sin(k*pi/2)*sin(k*pi*arr1_x)*exp(-0.5*(k*pi)^2*arr1_t); end arr1(i,j) = result; arr1_t = arr1_t + delta_t; result = 0; end arr1_t = 0; arr1_x = arr1_x + 0.1;end% Numerical Computing Solution% (Initial Condition)arr2 = zeros(row,column);x_num = 0;for i = 1 : row if(x_num&gt;0.5) arr2(i,1) = 1-x_num; else arr2(i,1) = x_num; end x_num = x_num + 0.1;end% applied explicit differences to calculate other points% applied boundary condition as welldt = delta_t;dx = 0.1;for j = 2: column for i = 1:row if (i == 1 || i == row) arr2(i,j) = 0; else arr2(i,j) =0.5 *dt/(dx)^2*(arr2(i+1, j-1)-2*arr2(i,j-1)+arr2(i-1,j-1))+arr2(i,j-1); end endend% Error |Exact - Numerical|error = zeros(row, column);for i = 1 : row for j = 1 : column error(i,j) = abs(arr1(i,j)- arr2(i,j)); endend%% plot Portionx_ = 0:0.1:1;prompt_1 = &#x27;Enter the value of t to get the graph u(x,t) at t =: &#x27; ;t = input(prompt_1);exctVal = arr1(:, t/delta_t+1 );numVal = arr2(:, t/delta_t+1 );plot (x_,numVal,x_,exctVal,&#x27;lineWidth&#x27;, 2);hold offxlabel(&#x27;x&#x27;);s = num2str(t);txt = [&#x27;u(x,t), t= &#x27;, s];ylabel(txt);legend(&#x27;Numerical&#x27;,&#x27;Exact&#x27;); Graphical Output","categories":[{"name":"Numerical Analysis","slug":"Numerical-Analysis","permalink":"http://boxianglin.github.io/categories/Numerical-Analysis/"}],"tags":[{"name":"Numerical Analysis","slug":"Numerical-Analysis","permalink":"http://boxianglin.github.io/tags/Numerical-Analysis/"}]},{"title":"Java-LinkedList-Insert","slug":"LinkedList-Insert","date":"2021-03-08T03:12:37.671Z","updated":"2021-05-23T00:18:58.286Z","comments":true,"path":"2021/03/07/LinkedList-Insert/","link":"","permalink":"http://boxianglin.github.io/2021/03/07/LinkedList-Insert/","excerpt":"Discussion: Read values from a file and insert values into a LinkedList data structure The goal is that at any point of the insertion the LinkedList should be in sorted First Approach Using the JAVA Library LinkedList We passing the file address into the run method’s parameter and do the try catch. 1234567891011121314class....&#123; private LinkedList&lt;Integer&gt; list = new new LinkedList&lt;Integer&gt;(); public void run(String address)&#123; try &#123; read_insert(address); //if address is valid, read it. &#125;catch(IOException e)&#123; e.printStackTrace(); //else, error resulted System.exit(0); //exist the program &#125; &#125;&#125; Using the Buffered-Reader to read values from the file. 12345678910public void read_insert(String address) throws IOException &#123; File text = new File(address); BufferedReader br1 = new BufferedReader(new FileReader(text)); String s = null; while((s=br1.readLine())!=null) &#123; //read line by line list.insert(Integer.parseInt(s)); //parse to int and pass to insert method &#125; br1.close();&#125;","text":"Discussion: Read values from a file and insert values into a LinkedList data structure The goal is that at any point of the insertion the LinkedList should be in sorted First Approach Using the JAVA Library LinkedList We passing the file address into the run method’s parameter and do the try catch. 1234567891011121314class....&#123; private LinkedList&lt;Integer&gt; list = new new LinkedList&lt;Integer&gt;(); public void run(String address)&#123; try &#123; read_insert(address); //if address is valid, read it. &#125;catch(IOException e)&#123; e.printStackTrace(); //else, error resulted System.exit(0); //exist the program &#125; &#125;&#125; Using the Buffered-Reader to read values from the file. 12345678910public void read_insert(String address) throws IOException &#123; File text = new File(address); BufferedReader br1 = new BufferedReader(new FileReader(text)); String s = null; while((s=br1.readLine())!=null) &#123; //read line by line list.insert(Integer.parseInt(s)); //parse to int and pass to insert method &#125; br1.close();&#125; Now we created a insert method to inserting each value that pass in from the Buffered-Reader. 123456789101112131415161718public void insert(int value) &#123; if(list.size() == 0 || value &lt; list.getFirst() ) &#123; list.addFirst(value); //insert at the head if list is empty and //if val &lt; head&#x27;s val &#125; else if(value &gt; list.getLast() ) &#123; list.addLast(value); //insert to the tail if val &gt; tail&#x27;s value &#125; else &#123; Iterator&lt;Integer&gt; it = list.iterator(); int index = 0; while(it.hasNext() &amp;&amp; value &gt;= it.next())&#123; index ++; //if the list is not empty and val still &gt;= list&#x27;s //next value, index keep increases by 1 &#125; list.add(index,value); //usingg the java library to add the value at specific index. &#125;&#125; The insert runtime complexity is O(N + N) = O(N) NOTICE: The runtime complexity could be worst to O(N^2) if our insert algorithm suppose as below: 123456789101112131415161718public void insert(int value) &#123; if(list.size() == 0 || value &lt; list.getFirst() ) &#123; list.addFirst(value); //insert at the head if list is empty and //if val &lt; head&#x27;s val &#125; else if(value &gt; list.getLast() ) &#123; list.addLast(value); //insert to the tail if val &gt; tail&#x27;s value &#125; else &#123; for(int i = 0; i&lt;list.size(); i++)&#123; if(val&lt;list.get(i))&#123; list.add(i,value); break; &#125; &#125; &#125;&#125; This algorithm is not good in runtime and often time algorithm that involve break is not safe, however, this algorithm might be OKAY for a small size of values file but cause runtime error if size of file is large Second Approach Using Self-Define Singly LinkedList We know that LinkedList data structure basically is objects that linked to each other, each object contains some value Singly LinkedList looks like this: that each of the rectangle is a object, value is inside of the object, and arrow is the self-define data type that help to connect up the object, often we using the object as a data type for the arrow Now our object that to store the value will be as follows: 12345678class ListNode&#123; int val; ListNode next; //arrow public ListNode(int val) &#123; this.val = val; &#125;&#125; and our LinkedList is a collection of the ListNodes 1234567891011public class SingleLinkedList &#123; ListNode head; int size; public SingleLinkedList() &#123; size = 0; head = null; &#125;&#125; OKAY, So now lets implementing the insert method: same idea as the previous one but instead now we are creating our own LinkList instead of using the java library. So we will be do some mollifications to the add(index, val) method that was in Java Library. Suppose we are inserting 3 to the LinkedList: We will let 3 —&gt; 4 first, then let 2 —&gt; 3. So, lets do it to the codes 12345678910111213141516171819202122232425public void insert(int data) &#123; //list is empty or val that greater than first node&#x27;s value, swap them if(head == null || head.val &gt; data) &#123; ListNode newHead= new ListNode(data); newHead.next = head; head = newHead; size++; &#125;else &#123; //cur as a temporary node that use to traverse the list ListNode cur = head; while(cur.next != null &amp;&amp; cur.next.val&lt;data) &#123; cur = cur.next; //if value greater than node&#x27;s value, keep going &#125; if(cur.next == null) &#123; //case to put the value to the tail ListNode nextVal = new ListNode(data); cur.next = nextVal; size++; &#125;else &#123; //case to insert ListNode newNext = new ListNode(data); newNext.next = cur.next; //cur.next point to the new val cur.next = newNext; //new val then be the new cur.next size++; &#125; &#125; &#125; This algorithm of insert takes runtime of O(N), we are basically traverse through the list and doing some pointing direction change necessary Alright! This is two approach for insert algorithm that to main the list sorted at any given point. I will upload the full version of the codes on my GitHub shortly.","categories":[{"name":"Data Structure","slug":"Data-Structure","permalink":"http://boxianglin.github.io/categories/Data-Structure/"}],"tags":[{"name":"Data Structure","slug":"Data-Structure","permalink":"http://boxianglin.github.io/tags/Data-Structure/"}]}],"categories":[{"name":"Numerical Analysis","slug":"Numerical-Analysis","permalink":"http://boxianglin.github.io/categories/Numerical-Analysis/"},{"name":"Data Structure","slug":"Data-Structure","permalink":"http://boxianglin.github.io/categories/Data-Structure/"}],"tags":[{"name":"Numerical Analysis","slug":"Numerical-Analysis","permalink":"http://boxianglin.github.io/tags/Numerical-Analysis/"},{"name":"Data Structure","slug":"Data-Structure","permalink":"http://boxianglin.github.io/tags/Data-Structure/"}]}